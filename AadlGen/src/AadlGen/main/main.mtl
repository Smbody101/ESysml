[comment encoding = UTF-8 /]
[module main('http://aadl.info/AADL/2.0', 'http://www.aadl.info/EMV2', 'http://www.eclipse.org/emf/2002/Ecore')]

[import AadlGen::com::genApi/]
[import AadlGen::com::genTools/]

[template public generateAADL(aadlPackage : AadlPackage) ? (name <> 'Base_Types')]
[comment @main/]
[file (aadlPackage.name.concat('.aadl'), false, 'UTF-8')]
package [aadlPackage.name/]
public
	[genImportPackage(aadlPackage)/]
	[for (classifier : Classifier | aadlPackage.ownedPublicSection.ownedClassifier) separator('\n')]
		[if (classifier.oclIsKindOf(SystemType))]
	[genSystemType(aadlPackage, classifier.oclAsType(SystemType))/]
		[elseif (classifier.oclIsKindOf(SystemImplementation))]
	[genSystemImplementation(aadlPackage, classifier.oclAsType(SystemImplementation))/]
		[elseif (classifier.oclIsKindOf(ProcessType))]
	[genProcessType(aadlPackage, classifier.oclAsType(ProcessType))/]
		[elseif (classifier.oclIsKindOf(ProcessImplementation))]
	[genProcessImplementation(aadlPackage, classifier.oclAsType(ProcessImplementation))/]
		[elseif (classifier.oclIsKindOf(ThreadType))]
	[genThreadType(aadlPackage, classifier.oclAsType(ThreadType))/]
		[elseif (classifier.oclIsKindOf(ThreadImplementation))]
	[genThreadImplementation(aadlPackage, classifier.oclAsType(ThreadImplementation))/]
		[elseif (classifier.oclIsKindOf(SubprogramType))]
	[genSubprogramType(aadlPackage, classifier.oclAsType(SubprogramType))/]
		[elseif (classifier.oclIsKindOf(SubprogramImplementation))]
	[genSubprogramImplementation(aadlPackage, classifier.oclAsType(SubprogramImplementation))/]
		[elseif (classifier.oclIsKindOf(DataType))]
	[genDataType(aadlPackage, classifier.oclAsType(DataType))/]
		[elseif (classifier.oclIsKindOf(DataImplementation))]
	[genDataImplementation(aadlPackage, classifier.oclAsType(DataImplementation))/]
		[elseif (classifier.oclIsKindOf(BusType))]
	[genBusType(aadlPackage, classifier.oclAsType(BusType))/]
		[elseif (classifier.oclIsKindOf(BusImplementation))]
	[genBusImplementation(aadlPackage, classifier.oclAsType(BusImplementation))/]
		[elseif (classifier.oclIsKindOf(DeviceType))]
	[genDeviceType(aadlPackage, classifier.oclAsType(DeviceType))/]
		[elseif (classifier.oclIsKindOf(DeviceImplementation))]
	[genDeviceImplementation(aadlPackage, classifier.oclAsType(DeviceImplementation))/]
		[/if]
	[/for]
	[for (lib : AnnexLibrary | aadlPackage.ownedPublicSection.ownedAnnexLibrary)]
	[if (lib.oclIsKindOf(ErrorModelLibrary))][genErrorModelLibrary(aadlPackage, lib.oclAsType(ErrorModelLibrary))/][/if]
	[/for]
end [aadlPackage.name/];
[/file]
[/template]

